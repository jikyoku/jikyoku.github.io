---
layout: post
title:  "新闻要素的抽取"
date:   2016-11-21 20:44:13 +0800
categories: jekyll nlp
subtitle: subtitle
author: 时旭
tag: 技术
---
# **领域新闻事件抽取**

## 要解决的问题

1. 根据已有的新闻语料，训练事件抽取模型

2. 利用训练好的模型对新读入的新闻进行事件抽取，识别出新闻所描述的事件类型，以及事件的要素信息

   ​	输入：一篇新闻

   ​	输出：事件类型   &  事件类型模板对应元素信息

3. 分为两个过程：

   1. 模型训练过程：利用已有语料训练，这里主要得到事件类型和事件触发词
   2. 事件识别和抽取过程：对新的新闻进行事件识别和元素抽取


# **模型建立过程**

## 抽取任务

1. 事件类型发现

   > 事件类型发现是事件抽取的基础，唯有首先确定事件类型，我们才能根据触发词判断到底属于哪个类型的事件

2. 事件触发词 & 事件类型的识别

   > 事件触发词是指引起事件发生的词，是决定事件类别的重要特征

3. 事件元素的识别

   > 事件元素是指事件的参与者，本文根据教育领域和通信领域中发掘的事件类型建立相关的事件模板（人工）

------

## 触发词抽取 & 事件类型自动发现	

1. 方案：利用句子聚类或者相似度计算（余弦相似度）对含有候选触发词的句子进行聚类，将每个类的句子集合看作是一个事件类型，然后人工读取这些事件句子，给出事件类型定义

2. 具体过程

   > #### 触发词抽取算法  
   >
   > 1. 输入：文本 
   > 2. 分词、分句  
   > 3. 统计所有动词的`TF-IDF`值,将`TF-IDF`值大于阈值`V`的动词设为候选触发词
   > 4. 对文本所有含有候选触发词的句子进行依存句法分析
   > 5. 识别出句子中的主谓关系`SBV`和动宾关系`VOB`二元组
   > 6. 判断两对二元组中动词是否相等，如果相等，则将该动词设为真的触发词，并将该句子保存为候选事件句
   > 7. 最后结果为一个候选触发词集合以及含有候选触发词`triggerSet`的事件句子集合`sentenceSet`
   > 8. 输出：`triggerSet` & `sentenceSet`

   > #### 事件句子聚类算法1：
   >
   > 1. 输入：候选事件句集合`sentenceSet`
   >
   > 2. 利用余弦相似度，分别计算任意两个句子间的相似度
   >
   > 3. 如果高于阈值`V`，将这两个句子归为一个事件类别
   >
   > 4. 聚类结束后，由人去读取每个类别的句子，进行事件归纳
   >
   > 5. 输出：事件句子集合`eventSentenceSet`
   >
   > 6. 最后结果将得出一个事件类型集合`eventSentenceSet`，以及`触发词--事件类型`二元对照表
   >
   >    优点：简单，易于实现
   >
   >    缺点：比较相似度过程中失去了句子触发词的上下文特征

   > #### 事件句子聚类算法2:
   >
   > 1. 候选句子集合`sentenceSet`
   > 2. 构建特征向量
   >    1. 触发词
   >    2. 触发词左边一个实体
   >    3. 触发词右边一个实体
   >    4. 句子主谓关系`SBV`中主语
   >    5. 句子动宾关系`VOB`中宾语
   >    6. 。。。
   > 3. 对特征集合利用K近邻算法或者其他算法进行聚类

   3. 至此，通过聚类，可以得出事件句子蔟，然后通过人工去归纳总结，得出相关类别的事件。这一过程我们可以得到事件类型和事件触发词，接下来开始事件抽取过程

---

# **事件识别和元素抽取**
---

## 候选事件抽取

1. 方案：将句子中每个词和触发词表对比匹配，如果匹配成功，则认为该句子是候选事件句，对应的事件类型为触发词对应的事件类型

2. 具体算法：

   > 1. 输入：触发词表`triggerSet`，待处理新闻语料
   >
   > 2. 分词、分句`sentence`
   >
   > 3. 遍历句子`sentence`中每一个词`w`
   >
   >    ​	如果词`w` 在`triggerSet`中, `sentence`为候选事件，且事件类型为`w`对应的事件类型 
   >
   > 4. 输出：`candidateEventSet`
   >
   > 5. 至此，这一步之后得到的是一个候选事件集合`candidateEventSet`

---

## 对候选事件进行分类

1. 问题：由于仅仅根据含有触发词就判断是候选事件，这样引入了大量假的候选事件，所以要对候选事件进行筛选

2. 方案：使用最大熵分类器进行分类

3. 具体算法：

   >1. 输入：候选事件集合`candidateEventSet`
   >
   >2. 最大熵模型训练
   >
   >   1. 特征选取
   >      1. ​    F1：候选事件中的触发词 
   >      2. ​    F2：候选事件触发词的词性  
   >      3. ​    F3：候选事件触发词左侧 4 个词  
   >      4. ​    F4：候选事件触发词右侧 4 个词  
   >      5. ​    F5：候选事件触发词左侧 4 个词的词性  
   >      6. ​    F6：候选事件触发词右侧 4 个词的词性  
   >      7. ​    F7：候选事件触发词左侧 1 个实体  
   >      8. ​    F8：候选事件触发词右侧 1 个实体  
   >      9. ​    F9：候选事件触发词左侧 1 个实体的实体类型  
   >      10. ​    F10：候选事件触发词左侧 1 个实体的实体类型  
   >      11. ​    F11：候选事件触发词在依存句法中所关联的主语 
   >      12. ​    F12：候选事件触发词在依存句法中所关联的宾语 
   >   2. 人工标注一部分训练数据，使用一部分训练数据训练最大熵分类模型
   >   3. 采用交叉验证方法，对模型进行评估和调整，直到满足预期结果
   >
   >3. 用训练好的最大熵模型对候选事件进行分类，得到真正的候选事件
   >
   >4. 输出：`realEventSet`
   >
   >5. 至此，通过分类，得到真的候选事件集合`realEventSet`
   >
   >   注：由于人工标注训练数据，难免存在误差，可能导致分类器不准确	


---

## 篇章级事件确定

1. 问题：经过上一步处理后，我们可以得到一篇新闻中所有的事件句子集合，这些集合可能由多个事件类型，我们要确定一种方案，从这些候选事件类型中，确定这篇新闻到底属于哪个事件类型

2. 方案：从多个方面计算，考虑到一般情况下，新闻标题是整篇新闻的核心句，最能说明正文所描述的新闻事件，我们将对新闻标题进行特殊处理，具体请见下面算法

3. 具体算法：

   > 1. 输入：`realEventSet`，新闻标题`title`
   > 2. `title`中是否含有触发词
   >
   > ​
   >
   > ​

---

## 事件元素抽取









